{"version":3,"sources":["Components/Common/Container.js","Components/Common/Button.js","Components/Common/Input.js","Components/Common/Text.js","Components/Home/Home.js","Components/Lobby/PlayerList.js","Components/Canvas/Canvas.js","Context/socket.js","Components/Lobby/Lobby.js","Ressources/thinking.gif","Components/Common/Progress.js","Components/PromptInput/PromptInput.js","Components/DrawingScreen/DrawingScreen.js","Components/Voting/VotingCard.js","Components/Voting/Voting.js","Components/Results/Rankings.js","Components/Results/Results.js","Components/RoundResults/RoundResults.js","App.js","reportWebVitals.js","index.js"],"names":["FullWidthContainer","styled","div","Container","Button","button","Input","input","Title","h1","SubTitle","h3","handleCreateClick","name","setError","a","fetch","method","headers","body","JSON","stringify","res","json","handleJoinClick","code","status","CreateButton","ErrorText","p","Home","socket","useState","setCode","error","setName","history","useHistory","placeholder","onChange","event","target","value","disabled","onClick","lobbyData","isHost","push","pathname","state","List","ol","ListItem","li","PlayerList","props","players","map","index","Canvas","forwardRef","ref","Error","canvasRef","containerRef","useRef","ctx","setCtx","currentX","setCurrentX","currentY","setCurrentY","isDrawing","setIsDrawing","isDrawingToolSelected","setIsDrawingToolSelected","currentColor","setCurrentColor","useEffect","current","getContext","canvas","width","height","drawLine","x","y","color","strokeStyle","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","CanvasContainer","Toolbar","ColorPicker","type","e","ToolbarButton","TrashButton","clearRect","StyledCanvas","onTouchStart","coords","convert","onTouchEnd","onTouchMove","onMouseDown","nativeEvent","offsetX","offsetY","onMouseUp","onMouseMove","onMouseLeave","changedTouches","pageX","offsetLeft","pageY","offsetTop","socketio","connect","SocketContext","React","createContext","Code","LobbyContainer","DrawingContainer","withRouter","setPlayers","joined","setJoined","lobbyDuration","setLobbyDuration","location","serverCode","useContext","getData","isMounted","emit","on","replace","style","length","display","marginTop","flexDirection","alignItems","htmlFor","id","min","max","step","startData","Progress","progress","StyledInput","Spinning","img","second","setSecond","submitted","setSubmitted","prompt","setPrompt","maxSecond","setMaxSecond","receivedTimer","setReceivedTimer","useParams","secondData","removeAllListeners","src","thinking","alt","StyledButton","isSubmitted","setIsSubmitted","dataURL","toDataURL","imageData","CardContainer","BottomContainer","VotingTile","VotingButton","UpperContainer","Name","StyledImg","VotingCard","showBest","setShowBest","showWeird","setShowWeird","showCreative","setShowCreative","showName","isBest","isCreative","isWeird","margin","backgroundColor","category","VoteContainer","StyledContainer","images","setImages","requestedImages","setRequestedImages","imgs","isLast","RankingsHolder","ul","StyledTitle","Rankings","title","data","mySort","b","ResultsContainer","RankingsContainer","Results","bestArray","setBestArray","creativeArray","setCreativeArray","weirdArray","setWeirdArray","playerData","setPlayerData","votes","arr1","best","arr2","creative","arr3","weird","sort","setTopPlayers","sortedPlayers","topCount","i","TopContainer","NextButton","StyledContaier","serverPlayers","setServerPlayers","buttonText","setButtonText","roundVotes","currentDrawing","newArr","j","mergeArrs","player","App","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85d38186.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FullWidthContainer = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  @media (max-width: 768px) {\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  flex: 1;\r\n  height: 90%;\r\n  @media (max-width: 768px) {\r\n    height: 90%;\r\n  }\r\n  background-color: white;\r\n  border: 4px solid rgba(164, 53, 194, 0.4);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 25px;\r\n  box-sizing: border-box;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  background-color: white;\r\n  padding: 15px 15px;\r\n  border: 2px solid rgba(164, 53, 170, 0.8);\r\n  color: rgba(164, 53, 194, 0.8);\r\n  transition: all 0.15s;\r\n  margin: 0 0.3em 1.2em 0;\r\n  font-size: 1.5em;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: rgba(164, 53, 194, 0.2);\r\n    border-color: rgba(164, 53, 194, 0.2);\r\n  }\r\n  &:active {\r\n    color: whitesmoke;\r\n    border-color: whitesmoke;\r\n  }\r\n  &:disabled {\r\n    color: rgba(164, 53, 194, 0.2);\r\n    border-color: rgba(164, 53, 194, 0.2);\r\n    cursor: default;\r\n  }\r\n  width: 30%;\r\n  @media (max-width: 768px) {\r\n    font-size: 1em;\r\n    padding: 5px 5px;\r\n    width: 80%;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  background-color: white;\r\n  padding: 15px 15px;\r\n  border: none;\r\n  border-bottom: 2px solid rgba(164, 53, 170, 0.8);\r\n  color: rgba(164, 53, 170, 0.8);\r\n  font-size: 1.5em;\r\n  transition: all 0.15s;\r\n  margin-bottom: 1.2em;\r\n  text-align: center;\r\n  &:hover {\r\n    color: rgba(164, 53, 194, 0.6);\r\n    border-color: rgba(164, 53, 194, 0.6);\r\n    outline: none;\r\n  }\r\n  &:focus {\r\n    color: red;\r\n    color: rgba(164, 53, 194, 0.6);\r\n    border-color: rgba(164, 53, 194, 0.6);\r\n    outline: none;\r\n  }\r\n  &::placeholder {\r\n    color: rgba(164, 53, 170, 0.8);\r\n  }\r\n  width: 50%;\r\n  @media (max-width: 768px) {\r\n    font-size: 1em;\r\n    padding: 5px 5px;\r\n    width: 80%;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  color: #47d1c2;\r\n  margin-bottom: 0;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1em;\r\n  }\r\n`;\r\n\r\nexport const SubTitle = styled.h3`\r\n  text-align: center;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  color: #47d1c2;\r\n  margin-bottom: 0.5em;\r\n  margin-top: 0;\r\n  @media (max-width: 768px) {\r\n    font-size: 0.75em;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FullWidthContainer, Container } from \"../Common/Container\";\r\nimport { Button } from \"../Common/Button\";\r\nimport { Input } from \"../Common/Input\";\r\nimport { Title } from \"../Common/Text\";\r\nimport styled from \"styled-components\";\r\n\r\nconst handleCreateClick = async (name, setError) => {\r\n  const res = await fetch(\"/api/lobby\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ name: name }),\r\n  });\r\n  setError(null);\r\n  const json = await res.json();\r\n\r\n  return json;\r\n};\r\n\r\nconst handleJoinClick = async (code, setError) => {\r\n  const res = await fetch(\"/api/lobby/\" + code);\r\n  if (res.status === 404) {\r\n    setError(\"This room does not exist\");\r\n\r\n    return null;\r\n  } else {\r\n    const json = await res.json();\r\n    setError(\"\");\r\n    return json;\r\n  }\r\n};\r\n\r\nconst Home = ({ socket }) => {\r\n  const [code, setCode] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [name, setName] = useState(null);\r\n  const history = useHistory();\r\n  return (\r\n    <FullWidthContainer>\r\n      <Container>\r\n        <Title>APPS IN WONDERLAND</Title>\r\n        <Input\r\n          placeholder=\"Enter Name\"\r\n          onChange={(event) => {\r\n            setName(event.target.value);\r\n          }}\r\n        ></Input>\r\n        {name && (\r\n          <>\r\n            <Input\r\n              placeholder=\"Enter Code\"\r\n              onChange={(event) => {\r\n                setCode(event.target.value);\r\n              }}\r\n            ></Input>\r\n            {error !== \"\" && <ErrorText>{error}</ErrorText>}\r\n\r\n            <Button\r\n              disabled={code === \"\"}\r\n              onClick={async () => {\r\n                const lobbyData = await handleJoinClick(code, setError);\r\n                if (lobbyData !== null) {\r\n                  lobbyData.isHost = false;\r\n                  history.push({\r\n                    pathname: \"Lobby/\" + lobbyData.code,\r\n                    state: { ...lobbyData, name },\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              JOIN\r\n            </Button>\r\n            <CreateButton\r\n              onClick={async () => {\r\n                const lobbyData = await handleCreateClick(name, setError);\r\n                if (!error) {\r\n                  lobbyData.isHost = true;\r\n                  history.push({\r\n                    pathname: \"Lobby/\" + lobbyData.code,\r\n                    state: { ...lobbyData, name },\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              CREATE\r\n            </CreateButton>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </FullWidthContainer>\r\n  );\r\n};\r\n\r\nconst CreateButton = styled(Button)`\r\n  border: 2px solid rgb(84, 177, 184);\r\n  color: rgb(84, 177, 184);\r\n`;\r\n\r\nconst ErrorText = styled.p`\r\n  color: red;\r\n`;\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PlayerList = (props) => {\r\n  const players = props.players;\r\n  return (\r\n    <List>\r\n      {players &&\r\n        players.map((value, index) => {\r\n          return <ListItem key={index}>{value.name}</ListItem>;\r\n        })}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst List = styled.ol`\r\n  padding-inline-start: 40px;\r\n  max-height: 250px;\r\n  overflow-y: scroll;\r\n  width: 75%;\r\n  max-width: 90%;\r\n  background-color: #f0f0f0;\r\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\r\n  min-height: 30%;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  font-size: 1.5em;\r\n`;\r\n\r\nexport default PlayerList;\r\n","import React, { forwardRef, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaEraser, FaPencilAlt, FaTrash } from \"react-icons/fa\";\r\nimport { Button } from \"../Common/Button\";\r\n\r\nconst Canvas = forwardRef((props, ref) => {\r\n  if (!ref) {\r\n    throw new Error(\"parent must provide canvas ref\");\r\n  }\r\n\r\n  let canvasRef = ref;\r\n\r\n  const containerRef = useRef(null);\r\n  const [ctx, setCtx] = useState(null);\r\n  const [currentX, setCurrentX] = useState(0);\r\n  const [currentY, setCurrentY] = useState(0);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [currentWidth, setCurrentWidth] = useState(0);\r\n  const [isDrawingToolSelected, setIsDrawingToolSelected] = useState(true);\r\n  const [currentColor, setCurrentColor] = useState();\r\n\r\n  //   useEffect(() => {\r\n  //     const onResize = (e) => {\r\n  //       const height = containerRef.current.offsetHeight;\r\n  //       const width = containerRef.current.offsetWidth;\r\n  //       if (Math.abs(width - currentWidth) > threshHold) {\r\n  //         ctx.canvas.width = width - 50;\r\n  //         ctx.canvas.height = height - 50;\r\n  //         console.log(\"hi\");\r\n  //         setCurrentWidth(width);\r\n  //       }\r\n  //     };\r\n  //     window.addEventListener(\"resize\", onResize, false);\r\n  //   }, [ctx, currentWidth, containerRef]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    // const height = containerRef.current.offsetHeight;\r\n    // const width = containerRef.current.offsetWidth;\r\n    let ctx = canvas.getContext(\"2d\");\r\n    setCtx(ctx);\r\n    // setCurrentWidth(width);\r\n    // ctx.canvas.width = width - 50;\r\n    // ctx.canvas.height = height - 150;\r\n    ctx.canvas.width = 300;\r\n    ctx.canvas.height = 420;\r\n    setCurrentColor(\"#000000\");\r\n  }, [ctx]);\r\n\r\n  const drawLine = function (x, y, color) {\r\n    ctx.strokeStyle = currentColor;\r\n    ctx.lineWidth = 1;\r\n    if (!isDrawingToolSelected) {\r\n      ctx.strokeStyle = \"#f2f2f2\";\r\n      ctx.lineWidth = 20;\r\n    }\r\n    ctx.beginPath();\r\n    ctx.moveTo(currentX, currentY);\r\n    ctx.lineTo(x, y);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n  };\r\n\r\n  const clearCanvas = function () {\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n  };\r\n  return (\r\n    <CanvasContainer ref={containerRef}>\r\n      <Toolbar>\r\n        <ColorPicker\r\n          type=\"color\"\r\n          onChange={(e) => {\r\n            setCurrentColor(e.target.value);\r\n          }}\r\n        />\r\n        <ToolbarButton\r\n          disabled={!isDrawingToolSelected}\r\n          onClick={() => {\r\n            setIsDrawingToolSelected(!isDrawingToolSelected);\r\n          }}\r\n        >\r\n          <FaEraser />\r\n        </ToolbarButton>\r\n\r\n        <ToolbarButton\r\n          disabled={isDrawingToolSelected}\r\n          onClick={() => {\r\n            setIsDrawingToolSelected(!isDrawingToolSelected);\r\n          }}\r\n        >\r\n          <FaPencilAlt />\r\n        </ToolbarButton>\r\n        <TrashButton onClick={clearCanvas}>\r\n          <FaTrash />\r\n        </TrashButton>\r\n      </Toolbar>\r\n      <StyledCanvas\r\n        ref={canvasRef}\r\n        onTouchStart={(e) => {\r\n          let coords = convert(e, ctx.canvas);\r\n          setCurrentX(coords.x);\r\n          setCurrentY(coords.y);\r\n          setIsDrawing(true);\r\n        }}\r\n        onTouchEnd={(e) => {\r\n          if (!isDrawing) {\r\n            return;\r\n          }\r\n          let coords = convert(e, ctx.canvas);\r\n          drawLine(coords.x, coords.y);\r\n          setIsDrawing(false);\r\n        }}\r\n        onTouchMove={(e) => {\r\n          if (!isDrawing) {\r\n            return;\r\n          }\r\n          let coords = convert(e, ctx.canvas);\r\n          // e.preventDefault();\r\n          drawLine(coords.x, coords.y);\r\n          setCurrentX(coords.x);\r\n          setCurrentY(coords.y);\r\n        }}\r\n        onMouseDown={(e) => {\r\n          setIsDrawing(true);\r\n          setCurrentX(e.nativeEvent.offsetX);\r\n          setCurrentY(e.nativeEvent.offsetY);\r\n        }}\r\n        onMouseUp={(e) => {\r\n          if (!isDrawing) {\r\n            return;\r\n          }\r\n          drawLine(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n          setIsDrawing(false);\r\n        }}\r\n        onMouseMove={(e) => {\r\n          if (!isDrawing) {\r\n            return;\r\n          }\r\n          drawLine(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n          setCurrentX(e.nativeEvent.offsetX);\r\n          setCurrentY(e.nativeEvent.offsetY);\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          setIsDrawing(false);\r\n        }}\r\n      ></StyledCanvas>\r\n    </CanvasContainer>\r\n  );\r\n});\r\n\r\nconst convert = (e, canvas) => {\r\n  return {\r\n    x: e.changedTouches[0].pageX - canvas.offsetLeft,\r\n    y: e.changedTouches[0].pageY - canvas.offsetTop,\r\n  };\r\n};\r\n\r\nconst CanvasContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst StyledCanvas = styled.canvas`\r\n  background-color: #f2f2f2;\r\n  touch-action: none;\r\n  box-shadow: 2px 2px 2px 1px rgb(0 0 0 / 20%);\r\n`;\r\n\r\nconst Toolbar = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  width: 50%;\r\n  border: 2px solid rgba(164, 53, 170, 0.8);\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst ToolbarButton = styled(Button)`\r\n  width: 55px;\r\n  height: 55px;\r\n  margin: 5px;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  padding: 0;\r\n  font-weight: 1em;\r\n`;\r\n\r\nconst TrashButton = styled(ToolbarButton)`\r\n  &:focus {\r\n    border: 2px solid rgba(164, 53, 170, 0.8);\r\n    color: rgba(164, 53, 194, 0.8);\r\n  }\r\n`;\r\n\r\nconst ColorPicker = styled.input`\r\n  width: 50px;\r\n  height: 50px;\r\n  margin: 5px;\r\n  cursor: pointer;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport default Canvas;\r\n","import socketio from \"socket.io-client\";\r\nimport React from \"react\";\r\n\r\nexport const socket = socketio.connect(\r\n  \"https://appsinwonderland.herokuapp.com/\"\r\n);\r\nexport const SocketContext = React.createContext();\r\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\r\nimport { FullWidthContainer, Container } from \"../Common/Container\";\r\nimport styled from \"styled-components\";\r\nimport PlayerList from \"./PlayerList\";\r\nimport { Button } from \"../Common/Button\";\r\nimport Canvas from \"../Canvas/Canvas\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport { Title, SubTitle } from \"../Common/Text\";\r\nimport { SocketContext } from \"../../Context/socket\";\r\n\r\nconst Lobby = (props) => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [joined, setJoined] = useState(false);\r\n  const [lobbyDuration, setLobbyDuration] = useState(60);\r\n\r\n  const state = props.location.state;\r\n  const serverCode = state.code;\r\n  const name = state.name;\r\n  const isHost = state.isHost;\r\n  const socket = useContext(SocketContext);\r\n  const history = useHistory();\r\n  const canvasRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await fetch(\"/api/lobby/\" + serverCode);\r\n      const json = await res.json();\r\n      setPlayers(json.players);\r\n    };\r\n    getData();\r\n  }, [serverCode]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (socket && !joined) {\r\n      if (isMounted) {\r\n        socket.emit(\"join\", { serverCode, name });\r\n        setJoined(true);\r\n      }\r\n      socket.on(\"playerJoined\", (players) => {\r\n        if (isMounted) {\r\n          setPlayers(players);\r\n        }\r\n      });\r\n\r\n      socket.on(\"hostStartedGame\", () => {\r\n        isMounted = false;\r\n        history.replace({\r\n          pathname: \"/Prompt/\" + serverCode,\r\n          state: { ...state, name },\r\n        });\r\n      });\r\n    }\r\n  }, [socket, joined, name, serverCode, history, state]);\r\n\r\n  const startGame = () => {\r\n    if (socket) {\r\n      const startData = {\r\n        lobbyDuration,\r\n      };\r\n      socket.emit(\"start\", startData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FullWidthContainer>\r\n      <LobbyContainer>\r\n        <Title>WELCOME TO THE LOBBY</Title>\r\n        <Code>\r\n          🔥 Join with Code\r\n          <span style={{ color: \"red\" }}> {serverCode} </span>🔥\r\n        </Code>\r\n        <PlayerList players={players} />\r\n        <SubTitle>Player Count: {players && players.length}</SubTitle>\r\n\r\n        {isHost && (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              marginTop: \"auto\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <label htmlFor=\"timer\">Set Round Duration</label>\r\n            <input\r\n              type=\"range\"\r\n              id=\"timer\"\r\n              min=\"5\"\r\n              max=\"120\"\r\n              step=\"5\"\r\n              value={lobbyDuration}\r\n              onChange={(e) => {\r\n                setLobbyDuration(e.target.value);\r\n              }}\r\n            />\r\n            <div>{lobbyDuration} seconds</div>\r\n          </div>\r\n        )}\r\n\r\n        <Button\r\n          style={{ marginTop: \"auto\" }}\r\n          disabled={!isHost}\r\n          onClick={startGame}\r\n        >\r\n          Start\r\n        </Button>\r\n      </LobbyContainer>\r\n      <DrawingContainer>\r\n        <Canvas ref={canvasRef} />\r\n      </DrawingContainer>\r\n    </FullWidthContainer>\r\n  );\r\n};\r\n\r\nconst Code = styled(SubTitle)`\r\n  outline: red;\r\n  font-size: 1.25em;\r\n`;\r\n\r\nconst LobbyContainer = styled(Container)`\r\n  max-width: 500px;\r\n  min-width: 300px;\r\n  margin: 0.5em;\r\n`;\r\n\r\nconst DrawingContainer = styled(Container)`\r\n  margin: 0.5em;\r\n  max-width: 500px;\r\n  justify-content: center;\r\n  @media (max-width: 768px) {\r\n    padding: 0;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport default withRouter(Lobby);\r\n","export default __webpack_public_path__ + \"static/media/thinking.89c0f8f4.gif\";","import styled from \"styled-components\";\n\nexport const Progress = styled.progress`\n  height: 40px;\n`;\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container, FullWidthContainer } from \"../Common/Container\";\r\nimport { Input } from \"../Common/Input\";\r\nimport { Title, SubTitle } from \"../Common/Text\";\r\nimport { Button } from \"../Common/Button\";\r\nimport thinking from \"../../Ressources/thinking.gif\";\r\nimport { SocketContext } from \"../../Context/socket\";\r\nimport { useHistory, useParams, withRouter } from \"react-router\";\r\nimport { Progress } from \"../Common/Progress\";\r\n\r\nconst PromptInput = (props) => {\r\n  const state = props.location.state;\r\n\r\n  const name = state.name;\r\n  const socket = useContext(SocketContext);\r\n  const [second, setSecond] = useState(30);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [maxSecond, setMaxSecond] = useState(60);\r\n  const history = useHistory();\r\n  const [receivedTimer, setReceivedTimer] = useState(false);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (socket) {\r\n      socket.on(\"timerUpdateStart\", (secondData) => {\r\n        if (isMounted) {\r\n          const { second, maxSecond } = secondData;\r\n          setSecond(second);\r\n          setMaxSecond(maxSecond);\r\n          if (!receivedTimer) {\r\n            setReceivedTimer(true);\r\n          }\r\n        }\r\n      });\r\n      socket.on(\"timerDoneStart\", () => {\r\n        if (isMounted) {\r\n          if (!submitted && prompt !== \"\") {\r\n            socket.emit(\"submitPrompt\", prompt);\r\n          }\r\n          history.replace({\r\n            pathname: \"/DrawingScreen/\" + id,\r\n            state: { ...state, name },\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n      socket.removeAllListeners(\"timerDoneStart\");\r\n      socket.removeAllListeners(\"timerUpdateStart\");\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [history, socket, submitted, prompt]);\r\n  return (\r\n    <FullWidthContainer>\r\n      <Container>\r\n        <Title>Enter a drawing prompt</Title>\r\n        <Spinning src={thinking} alt=\"loading...\" />\r\n\r\n        {receivedTimer && <Progress value={second} max={maxSecond} />}\r\n        {!submitted && (\r\n          <>\r\n            <StyledInput\r\n              placeholder=\"Input a suggestion!\"\r\n              onChange={(e) => {\r\n                setPrompt(e.target.value);\r\n              }}\r\n            ></StyledInput>\r\n            <Button\r\n              onClick={() => {\r\n                if (prompt !== \"\") {\r\n                  setSubmitted(true);\r\n                  socket.emit(\"submitPrompt\", prompt);\r\n                }\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </>\r\n        )}\r\n        {submitted && (\r\n          <SubTitle style={{ marginTop: \"auto\" }}>\r\n            Thank your for your submission. Waiting for others to submit\r\n          </SubTitle>\r\n        )}\r\n      </Container>\r\n    </FullWidthContainer>\r\n  );\r\n};\r\n\r\nconst StyledInput = styled(Input)`\r\n  margin-top: auto;\r\n`;\r\n\r\nconst Spinning = styled.img`\r\n  max-width: 100px;\r\n`;\r\nexport default withRouter(PromptInput);\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Canvas from \"../Canvas/Canvas\";\r\nimport { Button } from \"../Common/Button\";\r\nimport { Container, FullWidthContainer } from \"../Common/Container\";\r\nimport { Title, SubTitle } from \"../Common/Text\";\r\nimport { SocketContext } from \"../../Context/socket\";\r\nimport { useHistory, useParams, withRouter } from \"react-router\";\r\nimport { Progress } from \"../Common/Progress\";\r\n\r\nconst DrawingScreen = (props) => {\r\n  const socket = useContext(SocketContext);\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const history = useHistory();\r\n  const [second, setSecond] = useState(60);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [maxSecond, setMaxSecond] = useState(60);\r\n  const canvasRef = useRef();\r\n  const { id } = useParams();\r\n\r\n  const state = props.location.state;\r\n  const name = state.name;\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.emit(\"requestingPrompt\");\r\n      socket.emit(\"startTimer\");\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (socket && isMounted) {\r\n      socket.on(\"timerUpdate\", (secondData) => {\r\n        const { second, maxSecond } = secondData;\r\n        if (isMounted) {\r\n          setSecond(second);\r\n          setMaxSecond(maxSecond);\r\n        }\r\n      });\r\n      socket.on(\"timerDone\", () => {\r\n        if (isMounted) {\r\n          if (!isSubmitted) {\r\n            const dataURL = canvasRef.current.toDataURL();\r\n            const imageData = {\r\n              name,\r\n              dataURL,\r\n            };\r\n            socket.emit(\"submittingImage\", imageData);\r\n          }\r\n\r\n          history.replace({\r\n            pathname: \"/Voting/\" + id,\r\n            state: { ...state, name },\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n      socket.removeAllListeners(\"timerDone\");\r\n      socket.removeAllListeners(\"timerUpdate\");\r\n    };\r\n  }, [socket, isSubmitted]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (socket && isMounted) {\r\n      socket.on(\"sendingPrompt\", (prompt) => {\r\n        if (isMounted) {\r\n          setPrompt(prompt);\r\n        }\r\n      });\r\n      socket.on(\"gameOver\", () => {\r\n        if (isMounted) {\r\n          history.replace(\"/\");\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n      socket.removeAllListeners(\"sendingPrompt\");\r\n      socket.removeAllListeners(\"gameOver\");\r\n    };\r\n  }, [history, socket, isSubmitted]);\r\n  return (\r\n    <FullWidthContainer>\r\n      <DrawingContainer>\r\n        <Title style={{ marginTop: 0 }}>{prompt || \"LOADING PROMPT...\"}</Title>\r\n        <Progress value={second} max={maxSecond} />\r\n        {!isSubmitted && (\r\n          <>\r\n            <Canvas ref={canvasRef} />\r\n            <StyledButton\r\n              onClick={() => {\r\n                setIsSubmitted(true);\r\n                const dataURL = canvasRef.current.toDataURL();\r\n                const imageData = {\r\n                  name,\r\n                  dataURL,\r\n                };\r\n                socket.emit(\"submittingImage\", imageData);\r\n              }}\r\n            >\r\n              Submit\r\n            </StyledButton>\r\n          </>\r\n        )}\r\n        {isSubmitted && (\r\n          <SubTitle>\r\n            Thank you for your submission. Waiting for others.\r\n          </SubTitle>\r\n        )}\r\n      </DrawingContainer>\r\n    </FullWidthContainer>\r\n  );\r\n};\r\n\r\nconst DrawingContainer = styled(Container)`\r\n  padding: 20px;\r\n  @media (max-width: 768px) {\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0;\r\n`;\r\n\r\nexport default withRouter(DrawingScreen);\r\n","import React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { SocketContext } from \"../../Context/socket\";\n\nconst VotingCard = ({\n  src,\n  name,\n  showBest,\n  setShowBest,\n  showWeird,\n  setShowWeird,\n  showCreative,\n  setShowCreative,\n  showName,\n  isBest,\n  isCreative,\n  isWeird,\n}) => {\n  const socket = useContext(SocketContext);\n\n  return (\n    <CardContainer>\n      <UpperContainer>\n        <StyledImg alt=\"test\" src={src} />\n        <div style={{ margin: \"0.5em\" }}>\n          {isBest && <VotingTile>🥇 Best Drawing 🥇</VotingTile>}\n          {isCreative && (\n            <VotingTile style={{ backgroundColor: \"#7CE3F1\" }}>\n              🎨 Most Creative 🎨\n            </VotingTile>\n          )}\n          {isWeird && (\n            <VotingTile style={{ backgroundColor: \"#FD7070\" }}>\n              🤔 ??? 🤔\n            </VotingTile>\n          )}\n        </div>\n\n        {showName && <Name>Drawing by {name}</Name>}\n      </UpperContainer>\n      <BottomContainer>\n        {showBest && (\n          <VotingButton\n            onClick={() => {\n              setShowBest(false);\n              socket.emit(\"voteForPlayer\", { name: name, category: \"best\" });\n            }}\n          >\n            🥇 Best Drawing 🥇\n          </VotingButton>\n        )}\n\n        {showCreative && (\n          <VotingButton\n            style={{ backgroundColor: \"#7CE3F1\" }}\n            onClick={() => {\n              setShowCreative(false);\n              socket.emit(\"voteForPlayer\", {\n                name: name,\n                category: \"creative\",\n              });\n            }}\n          >\n            🎨 Most Creative 🎨\n          </VotingButton>\n        )}\n\n        {showWeird && (\n          <VotingButton\n            style={{ backgroundColor: \"#FD7070\" }}\n            onClick={() => {\n              setShowWeird(false);\n              socket.emit(\"voteForPlayer\", { name: name, category: \"weird\" });\n            }}\n          >\n            🤔 ??? 🤔\n          </VotingButton>\n        )}\n      </BottomContainer>\n    </CardContainer>\n  );\n};\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  margin: 1em;\n`;\n\nconst BottomContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst VotingTile = styled.div`\n  background: #67e9a3;\n  border-radius: 4px;\n  margin-bottom: 0.4em;\n  padding: 0.5em;\n  border: none;\n  text-align: center;\n`;\n\nconst VotingButton = styled.button`\n  background: #67e9a3;\n  border-radius: 4px;\n  margin-bottom: 0.4em;\n  width: calc(100% - 40px);\n  padding: 0.5em;\n  cursor: pointer;\n  border: none;\n  transition: all 0.2s;\n  &:hover {\n    filter: brightness(125%);\n  }\n  &:active {\n    filter: brightness(75%);\n  }\n`;\n\nconst UpperContainer = styled.div`\n  background-color: #f2f2f2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  border-radius: 4px;\n  margin-bottom: 1em;\n`;\n\nconst Name = styled.div`\n  margin-top: auto;\n  background-color: white;\n  margin-bottom: 15px;\n  width: calc(100% - 60px);\n  padding: 10px;\n  text-align: center;\n  border-radius: 4px;\n`;\n\nconst StyledImg = styled.img`\n  margin-top: auto;\n`;\n\nexport default VotingCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, FullWidthContainer } from \"../Common/Container\";\nimport { Title } from \"../Common/Text\";\nimport VotingCard from \"./VotingCard\";\nimport { SocketContext } from \"../../Context/socket\";\nimport { useHistory, useParams } from \"react-router\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Voting = (props) => {\n  const socket = useContext(SocketContext);\n  const [images, setImages] = useState([]);\n  const [requestedImages, setRequestedImages] = useState(false);\n  const [showBest, setShowBest] = useState(true);\n  const [showCreative, setShowCreative] = useState(true);\n  const [showWeird, setShowWeird] = useState(true);\n  const history = useHistory();\n  const { id } = useParams();\n  const state = props.location.state;\n  const name = state.name;\n\n  useEffect(() => {\n    let isMounted = true;\n    if (socket && !requestedImages && isMounted) {\n      socket.emit(\"requestingImages\");\n      if (isMounted) {\n        setRequestedImages(true);\n      }\n\n      socket.on(\"sendingImages\", (imgs) => {\n        if (isMounted) {\n          setImages(imgs);\n        }\n      });\n\n      socket.on(\"lastVoteDraw\", () => {\n        if (isMounted) {\n          history.replace({\n            pathname: \"/RoundResults/\" + id,\n            state: { ...state, name, isLast: false },\n          });\n        }\n      });\n\n      socket.on(\"lastVoteEnd\", () => {\n        if (isMounted) {\n          history.replace({\n            pathname: \"/RoundResults/\" + id,\n            state: { ...state, name, isLast: true },\n          });\n        }\n      });\n    }\n\n    return () => {\n      isMounted = false;\n      socket.removeAllListeners(\"sendingImages\");\n      socket.removeAllListeners(\"lastVoteDraw\");\n      socket.removeAllListeners(\"lastVoteEnd\");\n    };\n  }, []);\n\n  return (\n    <FullWidthContainer>\n      <StyledContainer>\n        <Title>Vote!</Title>\n        <VoteContainer>\n          {images.map((value, index) => {\n            return (\n              <VotingCard\n                key={index}\n                src={value.dataURL}\n                name={value.name}\n                showBest={showBest}\n                setShowBest={setShowBest}\n                showCreative={showCreative}\n                setShowCreative={setShowCreative}\n                showWeird={showWeird}\n                setShowWeird={setShowWeird}\n                showName={false}\n              />\n            );\n          })}\n        </VoteContainer>\n      </StyledContainer>\n    </FullWidthContainer>\n  );\n};\n\nconst VoteContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: 1em;\n`;\n\nconst StyledContainer = styled(Container)`\n  height: auto;\n  margin: 1em;\n`;\n\nexport default withRouter(Voting);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Rankings = (props) => {\n  const { title, data, color } = props;\n  return (\n    <RankingsHolder>\n      <StyledTitle style={{ backgroundColor: color }}>{title}</StyledTitle>\n      <List>\n        {data.map((value, index) => {\n          return (\n            <ListItem key={index}>\n              {index === 0 && \" 🥇 \"}\n              {value.name}{\" \"}\n              <span style={{ color: \"red\" }}> ({value.value} votes)</span>\n            </ListItem>\n          );\n        })}\n      </List>\n    </RankingsHolder>\n  );\n};\n\nconst RankingsHolder = styled.div`\n  flex: 1;\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  min-width: 250px;\n`;\n\nconst List = styled.ul`\n  margin: 0;\n  padding-inline-start: 0;\n`;\n\nconst ListItem = styled.li`\n  list-style-type: none;\n`;\n\nconst StyledTitle = styled.div`\n  background: #67e9a3;\n  border-radius: 4px;\n  margin-bottom: 0.4em;\n  width: calc(100% - 40px);\n  padding: 0.5em;\n  border: none;\n`;\n\nexport default Rankings;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { SocketContext } from \"../../Context/socket\";\nimport { Container, FullWidthContainer } from \"../Common/Container\";\nimport Rankings from \"./Rankings\";\n\nfunction mySort(a, b) {\n  if (a.value > b.value) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\nconst Results = () => {\n  const [bestArray, setBestArray] = useState([]);\n  const [creativeArray, setCreativeArray] = useState([]);\n  const [weirdArray, setWeirdArray] = useState([]);\n  const [playerData, setPlayerData] = useState([]);\n\n  const socket = useContext(SocketContext);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (socket && isMounted) {\n      socket.emit(\"requestingVotes\");\n\n      socket.on(\"sendingVotes\", (votes) => {\n        if (isMounted) {\n          setPlayerData(votes);\n        }\n      });\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    const arr1 = playerData.map((data) => {\n      return {\n        name: data.name,\n        value: data.votes.best,\n      };\n    });\n\n    const arr2 = playerData.map((data) => {\n      return {\n        name: data.name,\n        value: data.votes.creative,\n      };\n    });\n\n    const arr3 = playerData.map((data) => {\n      return {\n        name: data.name,\n        value: data.votes.weird,\n      };\n    });\n    arr1.sort(mySort);\n    setBestArray(arr1);\n\n    arr2.sort(mySort);\n    setCreativeArray(arr2);\n\n    arr3.sort(mySort);\n    setWeirdArray(arr3);\n  }, [playerData]);\n  return (\n    <FullWidthContainer>\n      <ResultsContainer>\n        <RankingsContainer>\n          <Rankings title=\"Best Drawing\" color=\"#67e9a3\" data={bestArray} />\n          <Rankings\n            title=\"Most Creative\"\n            color=\"#7CE3F1\"\n            data={creativeArray}\n          />\n          <Rankings title=\"???? Drawing\" color=\"#FD7070\" data={weirdArray} />\n        </RankingsContainer>\n      </ResultsContainer>\n    </FullWidthContainer>\n  );\n};\n\nconst ResultsContainer = styled(Container)`\n  flex-direction: row;\n  align-items: flex-start;\n  overflow-y: scroll;\n`;\n\nconst RankingsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  margin: 10px;\n  flex: 1;\n  font-weight: bold;\n  font-size: 1.5em;\n  text-align: center;\n`;\n\nexport default Results;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Container, FullWidthContainer } from \"../Common/Container\";\nimport { Title } from \"../Common/Text\";\nimport styled from \"styled-components\";\nimport VotingCard from \"../Voting/VotingCard\";\nimport { SocketContext } from \"../../Context/socket\";\nimport { Button } from \"../Common/Button\";\nimport { useHistory, useParams, withRouter } from \"react-router-dom\";\n\nfunction mySort(a, b) {\n  if (a.value > b.value) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\nfunction setTopPlayers(sortedPlayers, category) {\n  const topCount = sortedPlayers[0].value;\n\n  for (let i = 0; i < sortedPlayers.length; i++) {\n    if (sortedPlayers[i].value === topCount) {\n      sortedPlayers[i][category] = true;\n    } else {\n      sortedPlayers[i][category] = false;\n    }\n  }\n}\n\nfunction mergeArrs(arr1, arr2, arr3) {\n  const newArr = [];\n  for (let i = 0; i < arr1.length; i++) {\n    const name = arr1[i].name;\n    newArr[i] = {\n      name,\n      isBest: arr1[i].isBest,\n      img: arr1[i].img,\n    };\n\n    for (let j = 0; j < arr2.length; j++) {\n      if (arr2[j].name === name) {\n        newArr[i].isCreative = arr2[j].isCreative;\n        break;\n      }\n    }\n\n    for (let j = 0; j < arr3.length; j++) {\n      if (arr3[j].name === name) {\n        newArr[i].isWeird = arr3[j].isWeird;\n        break;\n      }\n    }\n  }\n  return newArr;\n}\n\nconst RoundResults = (props) => {\n  const [players, setPlayers] = useState([]);\n  const [serverPlayers, setServerPlayers] = useState([]);\n  const [buttonText, setButtonText] = useState(\"Next Round\");\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const socket = useContext(SocketContext);\n  const state = props.location.state;\n  const { isHost } = state;\n  const { name, isLast } = state;\n\n  useEffect(() => {\n    if (isLast) {\n      setButtonText(\"Go To Final Results\");\n    }\n  }, [isLast]);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (socket && isMounted) {\n      socket.emit(\"requestingVotes\");\n\n      socket.on(\"sendingVotes\", (votes) => {\n        if (isMounted) {\n          setServerPlayers(votes);\n        }\n      });\n\n      socket.on(\"hostStartedNextRound\", () => {\n        history.replace({\n          pathname: \"/DrawingScreen/\" + id,\n          state: { ...state, name },\n        });\n      });\n\n      socket.on(\"hostEndedGame\", () => {\n        history.replace({\n          pathname: \"/Results/\" + id,\n          state: { ...state, name },\n        });\n      });\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    if (serverPlayers.length === 0) {\n      return;\n    }\n    const arr1 = serverPlayers.map((data) => {\n      return {\n        name: data.name,\n        value: data.roundVotes.best,\n        img: data.currentDrawing,\n      };\n    });\n\n    const arr2 = serverPlayers.map((data) => {\n      return {\n        name: data.name,\n        value: data.roundVotes.creative,\n      };\n    });\n\n    const arr3 = serverPlayers.map((data) => {\n      return {\n        name: data.name,\n        value: data.roundVotes.weird,\n      };\n    });\n    arr1.sort(mySort);\n\n    arr2.sort(mySort);\n\n    arr3.sort(mySort);\n    setTopPlayers(arr1, \"isBest\");\n    setTopPlayers(arr2, \"isCreative\");\n    setTopPlayers(arr3, \"isWeird\");\n    const newArr = mergeArrs(arr1, arr2, arr3);\n    setPlayers(newArr);\n  }, [serverPlayers]);\n\n  return (\n    <FullWidthContainer>\n      <StyledContaier>\n        <TopContainer>\n          <Title style={{ margin: 0 }}>Round Results</Title>\n\n          {isHost && (\n            <NextButton\n              onClick={() => {\n                if (isLast) {\n                  socket.emit(\"hostEndingGame\");\n                } else {\n                  socket.emit(\"hostStartingNextRound\");\n                }\n              }}\n            >\n              {buttonText}\n            </NextButton>\n          )}\n        </TopContainer>\n\n        <VoteContainer>\n          {players.map((player, index) => {\n            return (\n              <VotingCard\n                key={index}\n                src={player.img}\n                name={player.name}\n                setShowBest={() => {}}\n                showBest={false}\n                setShowCreative={() => {}}\n                showCreative={false}\n                setShowWeird={() => {}}\n                showWeird={false}\n                showName={true}\n                isBest={player.isBest}\n                isCreative={player.isCreative}\n                isWeird={player.isWeird}\n              />\n            );\n          })}\n        </VoteContainer>\n      </StyledContaier>\n    </FullWidthContainer>\n  );\n};\n\nconst VoteContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: 1em;\n`;\n\nconst TopContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  padding: 1em;\n  width: 100%;\n`;\nconst NextButton = styled(Button)`\n  height: 50px;\n  margin: 0;\n  padding: 0;\n  margin: 0.5em;\n`;\n\nconst StyledContaier = styled(Container)`\n  height: auto;\n`;\n\nexport default withRouter(RoundResults);\n","import Home from \"./Components/Home/Home\";\r\nimport Lobby from \"./Components/Lobby/Lobby\";\r\nimport PromptInput from \"./Components/PromptInput/PromptInput\";\r\nimport DrawingScreen from \"./Components/DrawingScreen/DrawingScreen\";\r\nimport Voting from \"./Components/Voting/Voting\";\r\nimport Results from \"./Components/Results/Results\";\r\nimport RoundResults from \"./Components/RoundResults/RoundResults\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { SocketContext, socket } from \"./Context/socket\";\r\n\r\nfunction App() {\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/RoundResults/:id\">\r\n            <RoundResults />\r\n          </Route>\r\n          <Route path=\"/Results/:id\">\r\n            <Results />\r\n          </Route>\r\n          <Route path=\"/Voting/:id\">\r\n            <Voting />\r\n          </Route>\r\n          <Route path=\"/Prompt/:id\">\r\n            <PromptInput />\r\n          </Route>\r\n          <Route path=\"/Lobby/:id\">\r\n            <Lobby />\r\n          </Route>\r\n          <Route path=\"/DrawingScreen/:id\">\r\n            <DrawingScreen />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}